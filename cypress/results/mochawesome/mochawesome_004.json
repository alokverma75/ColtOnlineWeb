{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2020-12-05T17:40:23.741Z",
    "end": "2020-12-05T17:40:25.068Z",
    "duration": 1327,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fe71e201-f05d-444e-aa8c-60b55cb38129",
      "title": "",
      "fullFile": "cypress\\integration\\OnlineWeb\\LoginPageTest.js",
      "file": "cypress\\integration\\OnlineWeb\\LoginPageTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aaa4b725-ecd4-4e67-b7bc-64f15ce6c054",
          "title": "Test Login Functionality",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should test login functionality in ipad-mini screen",
              "fullTitle": "Test Login Functionality should test login functionality in ipad-mini screen",
              "timedOut": null,
              "duration": 1298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (Cypress._.isArray(device)) {\n  cy.viewport(device[0], device[1]);\n} else {\n  cy.viewport(device);\n}\nutilPage.visitBillingPage();\nCypress.on('uncaught:exception', function (err, runnable) {\n  // returning false here prevents Cypress from\n  // failing the test\n  //cy.log(err)\n  return false;\n});\nif (!screenshotTaken) {\n  utilPage.takePercySnapShot('Login Page');\n  screenshotTaken = true;\n}\nloginPage.getUserIDField().type(data.InternalAdmin);\nloginPage.getPasswordField().type(data.password);\nloginPage.getLoginButton().click();\ncy.wait(10000); // Cypress.on('uncaught:exception', (err, runnable) => {\n//     // returning false here prevents Cypress from\n//     // failing the test\n//     //cy.log(err)\n//     return false\n// })\nutilPage.getAuthorizeAPIEndPoint().as('authorize');\ncy.get('@authorize').should(function (response) {\n  expect(response.status).to.eq(200); // expect(response).to.have.length(500)\n  expect(response).to.have.property('headers').to.include({\n    'server': 'Colt' // ,\n    // 'content-type': 'application/json;charset=UTF-8'\n  }); //check for response bdoy to have all elements as below\n  expect(response.body).property(data.authAPiJSONData.operationElement);\n  expect(response.body).property(data.authAPiJSONData.dataElement);\n  expect(response.body).to.containSubset({\n    \"operationStatus\": {\n      \"success\": true,\n      \"messages\": [\"success\"]\n    }\n  }); //To test only selected data\n  expect(response.body.operationStatus.success).to.eq(true);\n  expect(response.body.operationStatus.messages[0]).to.eq('success');\n  expect(response.body.data[0].userName).to.equalIgnoreCase(data.InternalAdmin);\n  expect(response.body.data[0].roles[7]).to.eq(data.authAPiData.addressDoctor);\n  expect(response.body.data[0].firstName).to.eq(data.authAPiData.firstName);\n  expect(response.body.data[0].employeeType).to.eq(data.authAPiData.employeeType);\n  expect(response.body.data[0].userType).to.eq(data.authAPiData.userType); //data is an array so start with [] and declare diff objs and compare all imp data\n  expect(response.body.data).to.containSubset([{\n    \"roles\": [\"EveryOne\", \"AccountExec\", \"Colt\", \"Request_For_Approval\", \"RemoveUser\", \"ViewMyDraftOrder\", \"RTDTool\", \"AddressDoctor\", \"RaiseFaultTicket\", \"ViewStaticContent\", \"ViewMyLiveServices\", \"EditUser\", \"viewDocument\", \"AddUser\", \"ViewRegulatoryInformation\", \"ViewServices\", \"ViewOrders\", \"ViewBills\", \"ManageDocument\", \"RaiseBillingEnquiry\", \"RaiseServiceTicket\", \"DraftICServices\", \"ViewLiveICServices\", \"ViewTickets\", \"RaiseOtherEnquiry\"],\n    \"firstName\": \"test_123\",\n    \"lastName\": \"qwe\",\n    \"email\": \"Deepesh.Thukral@colt.net\",\n    \"belongsToOCN\": null,\n    \"isAdmin\": false,\n    \"belongsToBCN\": null,\n    \"isPartner\": false,\n    \"title\": \"Mr.\",\n    \"isActive\": true,\n    \"lastLoginDate\": null,\n    \"lastModifiedBy\": null,\n    \"employeeType\": \"Colt Employee\",\n    \"userName\": \"test2020ia\",\n    \"userType\": \"ACCOUNT_EXEC\",\n    \"ochId\": \"\"\n  }]);\n});",
              "err": {
                "message": "CypressError: `cy.task('percyHealthCheck')` failed with the following error:\n\nThe 'task' event has not been registered in the plugins file. You must register it before using cy.task()\n\nFix this in your plugins file here:\nD:\\TechPractice\\CypressAutomation\\cypress\\plugins\\index.js\n\nhttps://on.cypress.io/api/task",
                "estack": "CypressError: `cy.task('percyHealthCheck')` failed with the following error:\n\nThe 'task' event has not been registered in the plugins file. You must register it before using cy.task()\n\nFix this in your plugins file here:\nD:\\TechPractice\\CypressAutomation\\cypress\\plugins\\index.js\n\nhttps://on.cypress.io/api/task\ntask/<@https://my.colt.net/__cypress/runner/cypress_runner.js:159595:21\ntryCatcher@https://my.colt.net/__cypress/runner/cypress_runner.js:10584:23\n../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseFromHandler@https://my.colt.net/__cypress/runner/cypress_runner.js:8519:31\n../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise@https://my.colt.net/__cypress/runner/cypress_runner.js:8576:18\n../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise0@https://my.colt.net/__cypress/runner/cypress_runner.js:8621:10\n../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromises@https://my.colt.net/__cypress/runner/cypress_runner.js:8697:18\n_drainQueueStep@https://my.colt.net/__cypress/runner/cypress_runner.js:5291:12\n_drainQueue@https://my.colt.net/__cypress/runner/cypress_runner.js:5284:24\n../../node_modules/bluebird/js/release/async.js/</Async.prototype._drainQueues@https://my.colt.net/__cypress/runner/cypress_runner.js:5300:16\nAsync/this.drainQueues@https://my.colt.net/__cypress/runner/cypress_runner.js:5170:14\nFrom Your Spec Code:\n    ./node_modules/@percy/cypress/dist/index.js/<@https://my.colt.net/__cypress/tests?p=cypress\\support\\index.js:633:8\n    runCommand/<@https://my.colt.net/__cypress/runner/cypress_runner.js:169423:15\n    tryCatcher@https://my.colt.net/__cypress/runner/cypress_runner.js:10584:23\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseFromHandler@https://my.colt.net/__cypress/runner/cypress_runner.js:8519:31\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise@https://my.colt.net/__cypress/runner/cypress_runner.js:8576:18\n    ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseCtx@https://my.colt.net/__cypress/runner/cypress_runner.js:8613:10\n    _drainQueueStep@https://my.colt.net/__cypress/runner/cypress_runner.js:5295:12\n    _drainQueue@https://my.colt.net/__cypress/runner/cypress_runner.js:5284:24\n    ../../node_modules/bluebird/js/release/async.js/</Async.prototype._drainQueues@https://my.colt.net/__cypress/runner/cypress_runner.js:5300:16\n    Async/this.drainQueues@https://my.colt.net/__cypress/runner/cypress_runner.js:5170:14\n",
                "diff": null
              },
              "uuid": "91331ca2-3a62-4be6-b2a2-7f2d92241161",
              "parentUUID": "aaa4b725-ecd4-4e67-b7bc-64f15ce6c054",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "91331ca2-3a62-4be6-b2a2-7f2d92241161"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}